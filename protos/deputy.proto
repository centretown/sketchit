syntax = "proto3";
package centretown.sketchit.v1;

option go_package = "github.com/centretown/sketchit/api";

import public "dictionary.proto";

// Deputy
message Deputy {
    // label assigned to this deputy version
    string label = 6;
    // version of release
    string version = 1;
    // ordered list of skills
    repeated Skill skills = 2;
    // skills map keyed on tasks and alternates
    Skillset skillset = 3;
    // models mapped to routes
    Dictionary dictionary = 4;
    // ordered list of skills
    repeated Feature features = 7;
    // features map keyed on feature flag and label
    Gallery gallery = 5;
}

// skill mapped to skills' tasks and alternates
message Skillset {
    map<string,Skill> alias_map = 1;
}

// Skill in the skillset.
message Skill {
    // the task this skill effects
    string task = 1;
    // alternate codes for the task
    repeated string alternates = 2;
    // description of skill
    string description = 3;
    // summary of usage
    Summary summary = 4;
}

// task list
enum Task {
    help = 0;
    list = 1;
    goto = 2;
    save = 3;
    remove = 4;
    hello = 8;
    exit = 999;
}

// Summary description of model
message Summary {
    string usage = 1;
    string syntax = 2;
    repeated string examples = 3;
}

// Command to the deputy
message Command {
    // task to carry out
    string task = 1;
    // where to do the task
    string location = 2;
    // how to present the outcome
    Presentation presentation = 3;
    // reasons order not carried out
    string excuse = 4;
}

// Gallery of features keyed to flags and labels
message Gallery {
    map<string,Feature> flag_map = 1;
}

// Feature can describes how to respond to input and 
// how to present the output.
message Feature {
    enum Flag {
        // format
        f = 0;
        // projection (d for detail)
        d = 1;
        // auto reply
        auto = 2;
    }
    // flag to indicate feature
    string flag = 1;
    // unique label to reference feature
    string label = 2;
    // unique label to reference feature
    string description = 3;
    // usage summary
    Summary summary = 4;
}

// Presentation defines the features
// used to present output and respond to input
message Presentation {
    // Format to present (yaml,json,xml)
    Format format = 1;
    // Projection detail (full,summary,brief)
    repeated Projection projection = 2;
    // Auto reply to confirmations. (off,y,n)
    Auto confirm = 3;
}

// Format defines the options
enum Format {
	// deputy output yaml
    YAML = 0;
	// deputy output json
    JSON = 1;
	// deputy output xml
    XML = 2;
    // MAX
    FORMAT_LEN = 3;
}

// Projection defines the level of detail
// that is presented
enum Projection {
	// no reduction
    FULL = 0;
	// less detail than full
    SUMMARY = 1;
	// key, value pair
    BRIEF = 2;
    // MAX
    PROJECTION_LEN = 3;
}
// values for 'auto' features
enum Auto {
    // turn off auto
    OFF = 0;
    // auto reply yes
    Y = 1;
    // auto reply no
    N = 2;
    // MAX
    AUTO_LEN = 3;
}
