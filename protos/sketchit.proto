syntax = "proto3";
package centretown.sketchit.v1;

option go_package = "github.com/centretown/sketchit/api";

import public "google/protobuf/empty.proto";
import public "google/protobuf/any.proto";
// import "google/protobuf/field_mask.proto";
import public "google/api/annotations.proto";
import public "device.proto";
import public "sketch.proto";
import public "collection.proto";

// import "grpc.gateway.protoc_gen_swagger.options";
// import "protoc-gen-swagger/options/annotations.proto";

// Version: 1.0.0

service Sketchit {
    rpc SayHello(PingMessage) returns (PingMessage) {
        // SayHello to HTTP POST.
        option (google.api.http) = {
            post: "/1/ping"
            body: "*"
        };
    }

    rpc List(ListRequest) returns (ListResponse) {
        // List method maps to HTTP GET.
        option (google.api.http) = {
            // list device by sector
            // eg: /v1/sectors/home-iot/devices
            // list sketches by model
            // eg: /v1/toolkits/ESP32/sketches
            get: "/v1/{parent=*/*/*}"
        };
    }

    rpc Get(GetRequest) returns (google.protobuf.Any) {
        // Get maps to HTTP GET. Resource name is mapped to the URL. No body.
        option (google.api.http) = {
            // the resource name
            // eg: "/v1/sectors/home-iot/devices/esp32-01"
            // the name of Sketch resource, 
            // eg: "/v1/toolkits/ESP32/sketches/blink"
            get: "/v1/{name=*/*/*/*}"
        };
    }
      
    rpc Create(CreateRequest) returns (google.protobuf.Any) {
        // Create maps to HTTP POST. URL path as the collection name.
        // HTTP request body contains the resource.
        option (google.api.http) = {
            // The parent resource name
            // eg: "/v1/sectors/home_iot/devices"
            // eg: "/v1/toolkits/ESP32/sketches"
            post: "/v1/{parent=*/*/*}"
            body: "item"
        };
    }

    rpc Update(UpdateRequest) returns (google.protobuf.Any) {
        // Update maps to HTTP PATCH. Resource name is mapped to a URL path.
        // Resource is contained in the HTTP request body.
        option (google.api.http) = {
            // the name of resource, 
            // eg: "/v1/sectors/home-iot/devices/esp32-02"
            // eg: "/v1/toolkits/ESP32/sketches/blink"
            patch: "/v1/{name=*/*/*/*}"
            body: "item"
        };       
    }
    
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
        // Delete maps to HTTP DELETE. Resource name maps to the URL path.
        option (google.api.http) = {
            // the name of resource, 
            // eg: "/v1/sectors/home-iot/devices/esp32-02"
            // eg: "/v1/toolkits/ESP32/sketches/blink"
            delete:  "/v1/{name=*/*/*/*}"
        };
    }
    
    rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse) {
        // ListCollections maps to HTTP GET
        option (google.api.http) = {
            // no parameters
            // eg: /v1/collections
            get: "/v1/collections"
        };       
    }
    rpc GetDeputy(GetDeputyRequest) returns (Deputy) {
        // Get maps to HTTP GET. Resource name is mapped to the URL. No body.
        option (google.api.http) = {
            // the name of Deputy resource, 
            // eg: /v1/deputies/Andy
            get: "/v1/{name=deputies/*}"
        };
    }
  }

// GetDeviceRequest defines the data required to get a device
message GetDeputyRequest {
    // The deputy label, 
    // eg: "/deputies/Andy"
    string name = 1;
}

// ListCollectionsRequest -
message ListCollectionsRequest {
    // flags ignored when retrieved from storage 
    Presentation presentation = 1;
}

// ListCollectionsResponse -
message ListCollectionsResponse {
    repeated Collection collections = 1;
}

message PingMessage {
    string greeting = 1;
}

// ListRequest defines the data required to get a list of devices
message ListRequest {
    // The parent 
    // eg: "sectors/home-iot/devices"
    // eg: "toolkits/esp32/sketches"
    string parent = 1;
    // reduction full, brief, summary
    repeated Presentation presentation = 4;
    // The maximum number of devices to return.
    int32 page_size = 2;
    // The next_page_token value returned from a previous List request, if any.
    string page_token = 3;
}

// ListResponse defines the return value to a ListRequest
message ListResponse {
    // items listed
    repeated google.protobuf.Any items = 1;
    // next page
    string next_page_token = 2;
}

// GetRequest defines the data required to get a device
message GetRequest {
    // The path name, 
    // eg: "sectors/home-iot/devices/esp32-01"
    // eg: "toolkits/esp32/sketches/blink"
    string name = 1;
}

// CreateRequest defines the data required to create a new item
message CreateRequest {
    // The parent sector name
    // eg: "sectors/home-iot/devices"
    // eg: "toolkits/esp32/sketches"
    string parent = 1;
    // The device resource to create.
    google.protobuf.Any item = 2;
}

// UpdateRequest defines the data required to update an existing item
message UpdateRequest {
    // The path name, 
    // eg: "sectors/home-iot/devices/esp32-01"
    // eg: "toolkits/ESP32/sketches/esp32-01"
    string name = 1;
    // The replacement item
    google.protobuf.Any item = 2;
    // The update mask applies to the resource. For the FieldMask definition,
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    // google.protobuf.FieldMask update_mask = 3;
}

// DeleteRequest defines the data required to delete an existing item
message DeleteRequest {
    // The device path name, 
    // eg: "sectors/home-iot/devices/esp32-01"
    // eg: "toolkits/ESP32/sketches/esp32-01"
    string name = 1;
}

