syntax = "proto3";
package centretown.sketchit.v1;

option go_package = "github.com/centretown/sketchit/api";

import public "commander.proto";

// defines a micro controller device for sketchit
message Device {
    // collection of connected devices
    string sector = 6;
    // The unique label identifies the device within a sector
    string label = 1;
    // The model name
    string model = 2;
    // Identifies a pin on a micro controller device
    message Pin {
        // The pin number as designated by the device
        // eg: 2 for Pin #2
        int32 id = 1;
        // The label assigned to this pin
        // eg: "Internal-LED"
        string label = 2;
        // The pins overall purpose in the sketch
        // eg: "blink on to indicate activity"
        string purpose = 3;
    }
    // io pins if any
    repeated Pin pins = 3;
    // ip address if any
    string ip = 4;
    // serial port id if any
    string port = 5;
}
  
// ListDevicesRequest defines the data required to get a list of devices
message ListDevicesRequest {
    // The parent sector, eg: "home-iot".
    string parent = 1;
    // reduction full, brief, summary
    repeated Presentation presentation = 4;
    // The maximum number of devices to return.
    int32 page_size = 2;
    // The next_page_token value returned from a previous List request, if any.
    string page_token = 3;
}

// ListDevicesResponse defines the return value to a ListDevicesRequest
message ListDevicesResponse {
    // Devices listed
    repeated Device devices = 1;
    // next page
    string next_page_token = 2;
}

// GetDeviceRequest defines the data required to get a device
message GetDeviceRequest {
    // The device path name, 
    // eg: "/sectors/home-iot/devices/esp32-01"
    string name = 1;
}


// CreateDeviceRequest defines the data required to create a new device
message CreateDeviceRequest {
    // The parent sector name
    // eg: /sectors/home-iot
    string parent = 1;
    // The device resource to create.
    Device device = 2;
}

// UpdateDeviceRequest defines the data required to update an existing device
message UpdateDeviceRequest {
    // The device path name, 
    // eg: "/sectors/home-iot/devices/esp32-01"
    string name = 1;
    // The replacement device
    Device device = 2;
    // The update mask app  lies to the resource. For the `FieldMask` definition,
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    // google.protobuf.FieldMask update_mask = 3;
}

// DeleteDeviceRequest defines the data required to delete an existing device
message DeleteDeviceRequest {
    // The device path name, 
    // eg: "/sectors/home-iot/devices/esp32-01"
    string name = 1;
}
