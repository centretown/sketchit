{
  "swagger": "2.0",
  "info": {
    "title": "sketchit.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/1/ping": {
      "post": {
        "operationId": "Sketchit_SayHello",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PingMessage"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PingMessage"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/collections": {
      "get": {
        "operationId": "Sketchit_ListCollections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCollectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ignore",
            "description": "ignore.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{name=models/*/sketches/*}": {
      "get": {
        "operationId": "Sketchit_GetSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The Sketch path name, \neg: \"/models/ESP32/sketches/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "delete": {
        "operationId": "Sketchit_DeleteSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The Sketch path name, \neg: \"/models/ESP32/sketches/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "patch": {
        "operationId": "Sketchit_UpdateSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The Sketch path name, \neg: \"/models/ESP32/sketches/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The replacement Sketch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{name=sectors/*/devices/*}": {
      "get": {
        "operationId": "Sketchit_GetDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The device path name, \neg: \"/sectors/home-iot/devices/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "delete": {
        "operationId": "Sketchit_DeleteDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The device path name, \neg: \"/sectors/home-iot/devices/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "patch": {
        "operationId": "Sketchit_UpdateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The device path name, \neg: \"/sectors/home-iot/devices/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The replacement device",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{parent=models/*}/sketches": {
      "get": {
        "operationId": "Sketchit_ListSketches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSketchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent model, eg: \"ESP32\".",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "The maximum number of sketches to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "post": {
        "operationId": "Sketchit_CreateSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent model name\neg: /models/ESP32",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The Sketch resource to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{parent=sectors/*}/devices": {
      "get": {
        "operationId": "Sketchit_ListDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDevicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent sector, eg: \"home-iot\".",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "The maximum number of devices to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "post": {
        "operationId": "Sketchit_CreateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent sector name\neg: /sectors/home-iot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The device resource to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    }
  },
  "definitions": {
    "DevicePin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "The pin number as designated by the device\neg: 2 for Pin #2"
        },
        "label": {
          "type": "string",
          "title": "The label assigned to this pin\neg: \"Internal-LED\""
        },
        "purpose": {
          "type": "string",
          "title": "The pins overall purpose in the sketch\neg: \"blink on to indicate activity\""
        }
      },
      "title": "Identifies a pin on a micro controller device"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Action": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "integer",
          "format": "int32",
          "title": "The sequence defines the order of steps"
        },
        "type": {
          "$ref": "#/definitions/v1ActionType",
          "title": "The type identifies the type of command to run"
        },
        "delay": {
          "$ref": "#/definitions/v1DelayAction"
        },
        "mode": {
          "$ref": "#/definitions/v1ModeAction"
        },
        "pin": {
          "$ref": "#/definitions/v1PinAction"
        }
      },
      "title": "Action defines a processing step or instruction"
    },
    "v1ActionType": {
      "type": "string",
      "enum": [
        "delay",
        "mode",
        "pin"
      ],
      "default": "delay"
    },
    "v1Auto": {
      "type": "string",
      "enum": [
        "N",
        "Y"
      ],
      "default": "N",
      "description": "- N: no\n - Y: yes",
      "title": "Auto confirmation"
    },
    "v1Collection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the collection"
        },
        "type": {
          "type": "string",
          "title": "type is mostly \"collection\""
        },
        "readOnly": {
          "type": "boolean",
          "format": "boolean",
          "title": "readOnly indicates the update status"
        },
        "schema": {
          "$ref": "#/definitions/v1Schema",
          "title": "schema define the structure of the document"
        }
      },
      "title": "Collection of stored documents"
    },
    "v1DelayAction": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int32",
          "title": "The duration of the delay in milliseconds"
        }
      },
      "title": "DelayAction defines the data to carry out this action"
    },
    "v1Device": {
      "type": "object",
      "properties": {
        "sector": {
          "type": "string",
          "title": "collection of connected devices"
        },
        "label": {
          "type": "string",
          "title": "The unique label identifies the device within a sector"
        },
        "model": {
          "type": "string",
          "title": "The model name"
        },
        "pins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicePin"
          },
          "title": "io pins if any"
        },
        "ip": {
          "type": "string",
          "title": "ip address if any"
        },
        "port": {
          "type": "string",
          "title": "serial port id if any"
        }
      },
      "title": "defines a micro controller device for sketchit"
    },
    "v1FlagValues": {
      "type": "object",
      "properties": {
        "format": {
          "$ref": "#/definitions/v1Format",
          "title": "Format used by commander print"
        },
        "projection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Projection"
          },
          "title": "Projection used by storage \u0026 commander"
        },
        "auto": {
          "$ref": "#/definitions/v1Auto",
          "title": "Auto used by sketchit client"
        }
      },
      "title": "FlagValues are use by commander and storage"
    },
    "v1Format": {
      "type": "string",
      "enum": [
        "YAML",
        "JSON",
        "XML"
      ],
      "default": "YAML",
      "description": "- YAML: commander output yaml\n - JSON: commander output yaml\n - XML: key, value pair",
      "title": "Format defines commander print"
    },
    "v1ListCollectionsResponse": {
      "type": "object",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Collection"
          }
        }
      },
      "title": "ListCollectionsResponse -"
    },
    "v1ListDevicesResponse": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Device"
          },
          "title": "Devices listed"
        },
        "next_page_token": {
          "type": "string",
          "title": "next page"
        }
      },
      "title": "ListDevicesResponse defines the return value to a ListDevicesRequest"
    },
    "v1ListSketchesResponse": {
      "type": "object",
      "properties": {
        "sketches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Sketch"
          },
          "title": "sketches listed"
        },
        "next_page_token": {
          "type": "string",
          "title": "next page"
        }
      },
      "title": "ListSketchesResponse defines the return value to a ListsketchesRequest"
    },
    "v1Mode": {
      "type": "string",
      "enum": [
        "input",
        "output"
      ],
      "default": "input"
    },
    "v1ModeAction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "The pin id"
        },
        "signal": {
          "$ref": "#/definitions/v1Signal",
          "title": "The signal type analog/digital"
        },
        "mode": {
          "$ref": "#/definitions/v1Mode",
          "title": "The mode type output/input"
        }
      },
      "description": "ModeAction defines how a pin is acted on."
    },
    "v1PinAction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "The pin id"
        },
        "signal": {
          "$ref": "#/definitions/v1Signal",
          "title": "The signal type analog/digita"
        },
        "mode": {
          "$ref": "#/definitions/v1Mode",
          "title": "The mode type output/input"
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "title": "The value to read from or write to"
        }
      },
      "title": "PinAction reads/writes analog/digital values"
    },
    "v1PingMessage": {
      "type": "object",
      "properties": {
        "greeting": {
          "type": "string"
        }
      }
    },
    "v1Projection": {
      "type": "string",
      "enum": [
        "FULL",
        "SUMMARY",
        "BRIEF"
      ],
      "default": "FULL",
      "title": "- FULL: no reduction\n - SUMMARY: less detail than full\n - BRIEF: key, value pair"
    },
    "v1Schema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "schema name used for keyed lookup"
        },
        "title": {
          "type": "string",
          "title": "schema title for presentation"
        },
        "type": {
          "type": "string",
          "title": "type of data represented"
        },
        "description": {
          "type": "string",
          "title": "description of the schema"
        },
        "uniqueItems": {
          "type": "boolean",
          "format": "boolean",
          "title": "uniqueItems constrains items to be unique"
        },
        "items": {
          "$ref": "#/definitions/v1Schema",
          "title": "item list definition"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "required properties and order"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "options constrains schema to an array of choices"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Schema"
          },
          "title": "oneOf a selection of Schemas"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Schema"
          },
          "title": "properties defines an ordered list of children\norder determined by required array"
        }
      },
      "title": "Schema defines the structure of schemas within a document"
    },
    "v1Signal": {
      "type": "string",
      "enum": [
        "analog",
        "digital"
      ],
      "default": "analog"
    },
    "v1Sketch": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "title": "The model of the device this sketch is intended to run on\neg: ESP32, NANO, UNO"
        },
        "label": {
          "type": "string",
          "title": "The unique label assigned to this sketch \neg: \"blink\""
        },
        "device": {
          "type": "string",
          "title": "The device activated by this sketch\neg: \"/home-iot/devices/esp32-01\""
        },
        "purpose": {
          "type": "string",
          "title": "The purpose or description of the actions take by this sketch\neg: \"Blink at prescribed intervals\""
        },
        "setup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Action"
          },
          "title": "The setup stage defines the actions to take once\nbefore entering the sketch loop"
        },
        "loop": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Action"
          },
          "title": "The loop defines the actions that repeats forever"
        }
      },
      "title": "Sketch defines how a device is programmed"
    }
  }
}
