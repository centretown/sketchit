{
  "swagger": "2.0",
  "info": {
    "title": "sketchit.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/1/ping": {
      "post": {
        "operationId": "Sketchit_SayHello",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PingMessage"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PingMessage"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/collections": {
      "get": {
        "operationId": "Sketchit_ListCollections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCollectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "presentation.format",
            "description": "Format to present (yaml,json,xml).\n\n - YAML: deputy output yaml\n - JSON: deputy output json\n - XML: deputy output xml\n - FORMAT_LEN: MAX",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "YAML",
              "JSON",
              "XML",
              "FORMAT_LEN"
            ],
            "default": "YAML"
          },
          {
            "name": "presentation.projection",
            "description": "Projection detail (full,summary,brief).\n\n - FULL: no reduction\n - SUMMARY: less detail than full\n - BRIEF: key, value pair\n - PROJECTION_LEN: MAX",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "FULL",
                "SUMMARY",
                "BRIEF",
                "PROJECTION_LEN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "presentation.confirm",
            "description": "Auto reply to confirmations. (off,y,n).\n\n - OFF: turn off auto\n - Y: auto reply yes\n - N: auto reply no\n - AUTO_LEN: MAX",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OFF",
              "Y",
              "N",
              "AUTO_LEN"
            ],
            "default": "OFF"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{name=deputies/*}": {
      "get": {
        "operationId": "Sketchit_GetDeputy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Deputy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The deputy label, \neg: \"/deputies/Andy\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{name=sectors/*/devices/*}": {
      "get": {
        "operationId": "Sketchit_GetDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The device path name, \neg: \"/sectors/home-iot/devices/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "delete": {
        "operationId": "Sketchit_DeleteDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The device path name, \neg: \"/sectors/home-iot/devices/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "patch": {
        "operationId": "Sketchit_UpdateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The device path name, \neg: \"/sectors/home-iot/devices/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The replacement device",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{name=toolkits/*/sketches/*}": {
      "get": {
        "operationId": "Sketchit_GetSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The Sketch path name, \neg: \"/models/ESP32/sketches/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "delete": {
        "operationId": "Sketchit_DeleteSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The Sketch path name, \neg: \"/models/ESP32/sketches/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "patch": {
        "operationId": "Sketchit_UpdateSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The Sketch path name, \neg: \"/models/ESP32/sketches/esp32-01\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The replacement Sketch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{parent=sectors/*}/devices": {
      "get": {
        "operationId": "Sketchit_ListDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDevicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent sector, eg: \"home-iot\".",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "The maximum number of devices to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "post": {
        "operationId": "Sketchit_CreateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent sector name\neg: /sectors/home-iot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The device resource to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Device"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    },
    "/v1/{parent=toolkits/*}/sketches": {
      "get": {
        "operationId": "Sketchit_ListSketches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSketchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent model, eg: \"ESP32\".",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "The maximum number of sketches to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sketchit"
        ]
      },
      "post": {
        "operationId": "Sketchit_CreateSketch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent model name\neg: /models/ESP32",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "The Sketch resource to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Sketch"
            }
          }
        ],
        "tags": [
          "Sketchit"
        ]
      }
    }
  },
  "definitions": {
    "DevicePin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "The pin number as designated by the device\neg: 2 for Pin #2"
        },
        "label": {
          "type": "string",
          "title": "The label assigned to this pin\neg: \"Internal-LED\""
        },
        "purpose": {
          "type": "string",
          "title": "The pins overall purpose in the sketch\neg: \"blink on to indicate activity\""
        }
      },
      "title": "Identifies a pin on a micro controller device"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Action": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "integer",
          "format": "int32",
          "title": "The sequence defines the order of steps"
        },
        "type": {
          "$ref": "#/definitions/v1ActionType",
          "title": "The type identifies the type of command to run"
        },
        "delay": {
          "$ref": "#/definitions/v1DelayOperation"
        },
        "mode": {
          "$ref": "#/definitions/v1ModeOperation"
        },
        "pin": {
          "$ref": "#/definitions/v1PinOperation"
        }
      },
      "title": "Action defines a processing step or instruction"
    },
    "v1ActionType": {
      "type": "string",
      "enum": [
        "delay",
        "mode",
        "pin"
      ],
      "default": "delay"
    },
    "v1Auto": {
      "type": "string",
      "enum": [
        "OFF",
        "Y",
        "N",
        "AUTO_LEN"
      ],
      "default": "OFF",
      "description": "- OFF: turn off auto\n - Y: auto reply yes\n - N: auto reply no\n - AUTO_LEN: MAX",
      "title": "values for 'auto' features"
    },
    "v1Collection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the collection"
        },
        "type": {
          "type": "string",
          "title": "type is mostly \"collection\""
        },
        "readOnly": {
          "type": "boolean",
          "format": "boolean",
          "title": "readOnly indicates the update status"
        },
        "model": {
          "$ref": "#/definitions/v1Model",
          "title": "model describes \nof each document in the collection"
        }
      },
      "title": "Collection of stored items"
    },
    "v1DelayOperation": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int32",
          "title": "The duration of the delay in milliseconds"
        }
      },
      "title": "DelayOperation defines the data to carry out this action"
    },
    "v1Deputy": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "label assigned to this deputy version"
        },
        "version": {
          "type": "string",
          "title": "version of release"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Skill"
          },
          "title": "ordered list of skills"
        },
        "skillset": {
          "$ref": "#/definitions/v1Skillset",
          "title": "skills map keyed on tasks and alternates"
        },
        "dictionary": {
          "$ref": "#/definitions/v1Dictionary",
          "title": "models mapped to routes"
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Feature"
          },
          "title": "ordered list of skills"
        },
        "gallery": {
          "$ref": "#/definitions/v1Gallery",
          "title": "features map keyed on feature flag and label"
        }
      },
      "title": "Deputy"
    },
    "v1Device": {
      "type": "object",
      "properties": {
        "sector": {
          "type": "string",
          "title": "collection of connected devices"
        },
        "label": {
          "type": "string",
          "title": "The unique label identifies the device within a sector"
        },
        "model": {
          "type": "string",
          "title": "The model name"
        },
        "pins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicePin"
          },
          "title": "io pins if any"
        },
        "ip": {
          "type": "string",
          "title": "ip address if any"
        },
        "port": {
          "type": "string",
          "title": "serial port id if any"
        }
      },
      "title": "defines a micro controller device for sketchit"
    },
    "v1Dictionary": {
      "type": "object",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Collection"
          },
          "title": "Collections of items or documents"
        },
        "models": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Model"
          },
          "title": "Map to models to routes.\nRoutes are strings of text composed of labels \nsplit by separators.\nLabels are unique to a collection, should have meaning\nand must exclude separators.\nSeparators can be periods '.' or forward slashes '/'\nRoute structure:\n\u003croot\u003e. single separator\n  \u003ccollection\u003e. collection label\n    \u003cparent\u003e. route to ancestors\n      \u003clabel\u003e.\n        \u003cmodel\u003e...\n\u003cmodel\u003e\n  \u003citems\u003e... values, arrays, maps and models"
        }
      },
      "description": "Dictionary provides a pathway to the item collections.\nItems include application documents and the documents \nthat decsribe the semanatics of the deputy api.\nThe api provides access to the sketchit services."
    },
    "v1Feature": {
      "type": "object",
      "properties": {
        "flag": {
          "type": "string",
          "title": "flag to indicate feature"
        },
        "label": {
          "type": "string",
          "title": "unique label to reference feature"
        },
        "description": {
          "type": "string",
          "title": "unique label to reference feature"
        },
        "summary": {
          "$ref": "#/definitions/v1Summary",
          "title": "usage summary"
        }
      },
      "description": "Feature can describes how to respond to input and \nhow to present the output."
    },
    "v1Format": {
      "type": "string",
      "enum": [
        "YAML",
        "JSON",
        "XML",
        "FORMAT_LEN"
      ],
      "default": "YAML",
      "description": "- YAML: deputy output yaml\n - JSON: deputy output json\n - XML: deputy output xml\n - FORMAT_LEN: MAX",
      "title": "Format defines the options"
    },
    "v1Gallery": {
      "type": "object",
      "properties": {
        "flag_map": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Feature"
          }
        }
      },
      "title": "Gallery of features keyed to flags and labels"
    },
    "v1ListCollectionsResponse": {
      "type": "object",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Collection"
          }
        }
      },
      "title": "ListCollectionsResponse -"
    },
    "v1ListDevicesResponse": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Device"
          },
          "title": "Devices listed"
        },
        "next_page_token": {
          "type": "string",
          "title": "next page"
        }
      },
      "title": "ListDevicesResponse defines the return value to a ListDevicesRequest"
    },
    "v1ListSketchesResponse": {
      "type": "object",
      "properties": {
        "sketches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Sketch"
          },
          "title": "sketches listed"
        },
        "next_page_token": {
          "type": "string",
          "title": "next page"
        }
      },
      "title": "ListSketchesResponse defines the return value to a ListsketchesRequest"
    },
    "v1Mode": {
      "type": "string",
      "enum": [
        "input",
        "output"
      ],
      "default": "input"
    },
    "v1ModeOperation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "The pin id"
        },
        "signal": {
          "$ref": "#/definitions/v1Signal",
          "title": "The signal type analog/digital"
        },
        "mode": {
          "$ref": "#/definitions/v1Mode",
          "title": "The mode type output/input"
        }
      },
      "description": "ModeOperation defines how a pin is acted on."
    },
    "v1Model": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "label used for route"
        },
        "title": {
          "type": "string",
          "title": "model title for presentation"
        },
        "type": {
          "type": "string",
          "title": "type of data represented"
        },
        "description": {
          "type": "string",
          "title": "description of the model"
        },
        "uniqueItems": {
          "type": "boolean",
          "format": "boolean",
          "title": "uniqueItems constrains items to be unique"
        },
        "items": {
          "$ref": "#/definitions/v1Model",
          "title": "item list definition"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "required properties and order"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "options constrains model to an array of choices"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Model"
          },
          "title": "oneOf a selection of Schemas"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Model"
          },
          "title": "properties defines an ordered list of children\norder determined by required array"
        }
      },
      "title": "Model defines the attributes of a collected item"
    },
    "v1PinOperation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "The pin id"
        },
        "signal": {
          "$ref": "#/definitions/v1Signal",
          "title": "The signal type analog/digita"
        },
        "mode": {
          "$ref": "#/definitions/v1Mode",
          "title": "The mode type output/input"
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "title": "The value to read from or write to"
        }
      },
      "title": "PinOperation reads/writes analog/digital values"
    },
    "v1PingMessage": {
      "type": "object",
      "properties": {
        "greeting": {
          "type": "string"
        }
      }
    },
    "v1Presentation": {
      "type": "object",
      "properties": {
        "format": {
          "$ref": "#/definitions/v1Format",
          "title": "Format to present (yaml,json,xml)"
        },
        "projection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Projection"
          },
          "title": "Projection detail (full,summary,brief)"
        },
        "confirm": {
          "$ref": "#/definitions/v1Auto",
          "title": "Auto reply to confirmations. (off,y,n)"
        }
      },
      "title": "Presentation defines the features\nused to present output and respond to input"
    },
    "v1Projection": {
      "type": "string",
      "enum": [
        "FULL",
        "SUMMARY",
        "BRIEF",
        "PROJECTION_LEN"
      ],
      "default": "FULL",
      "description": "- FULL: no reduction\n - SUMMARY: less detail than full\n - BRIEF: key, value pair\n - PROJECTION_LEN: MAX",
      "title": "Projection defines the level of detail\nthat is presented"
    },
    "v1Signal": {
      "type": "string",
      "enum": [
        "analog",
        "digital"
      ],
      "default": "analog"
    },
    "v1Sketch": {
      "type": "object",
      "properties": {
        "toolkit": {
          "type": "string",
          "title": "The toolkit or skillset required to run\nthis sketch core (Nano,Uno), esp32 ()"
        },
        "label": {
          "type": "string",
          "title": "The label unique to this toolkit\neg: \"blink\""
        },
        "device": {
          "type": "string",
          "title": "The device activated by this sketch\neg: \"/home-iot/devices/esp32-01\""
        },
        "purpose": {
          "type": "string",
          "title": "The purpose or description of the actions take by this sketch\neg: \"Blink at prescribed intervals\""
        },
        "setup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Action"
          },
          "title": "The setup stage defines the actions to take once\nbefore entering the sketch loop"
        },
        "loop": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Action"
          },
          "title": "The loop defines the actions that repeats forever"
        }
      },
      "title": "Sketch defines how a device is programmed"
    },
    "v1Skill": {
      "type": "object",
      "properties": {
        "task": {
          "type": "string",
          "title": "the task this skill effects"
        },
        "alternates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "alternate codes for the task"
        },
        "description": {
          "type": "string",
          "title": "description of skill"
        },
        "summary": {
          "$ref": "#/definitions/v1Summary",
          "title": "summary of usage"
        }
      },
      "description": "Skill in the skillset."
    },
    "v1Skillset": {
      "type": "object",
      "properties": {
        "alias_map": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Skill"
          }
        }
      },
      "title": "skill mapped to skills' tasks and alternates"
    },
    "v1Summary": {
      "type": "object",
      "properties": {
        "usage": {
          "type": "string"
        },
        "syntax": {
          "type": "string"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Summary description of model"
    }
  }
}
