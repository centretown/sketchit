// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: dictionary.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Verb int32

const (
	Verb_help   Verb = 0
	Verb_ping   Verb = 1
	Verb_go     Verb = 2
	Verb_flags  Verb = 3
	Verb_list   Verb = 4
	Verb_get    Verb = 5
	Verb_delete Verb = 6
	Verb_exit   Verb = 999
)

// Enum value maps for Verb.
var (
	Verb_name = map[int32]string{
		0:   "help",
		1:   "ping",
		2:   "go",
		3:   "flags",
		4:   "list",
		5:   "get",
		6:   "delete",
		999: "exit",
	}
	Verb_value = map[string]int32{
		"help":   0,
		"ping":   1,
		"go":     2,
		"flags":  3,
		"list":   4,
		"get":    5,
		"delete": 6,
		"exit":   999,
	}
)

func (x Verb) Enum() *Verb {
	p := new(Verb)
	*p = x
	return p
}

func (x Verb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Verb) Descriptor() protoreflect.EnumDescriptor {
	return file_dictionary_proto_enumTypes[0].Descriptor()
}

func (Verb) Type() protoreflect.EnumType {
	return &file_dictionary_proto_enumTypes[0]
}

func (x Verb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Verb.Descriptor instead.
func (Verb) EnumDescriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{0}
}

type Projection int32

const (
	// no reduction
	Projection_FULL Projection = 0
	// less detail than full
	Projection_SUMMARY Projection = 1
	// key, value pair
	Projection_BRIEF Projection = 2
)

// Enum value maps for Projection.
var (
	Projection_name = map[int32]string{
		0: "FULL",
		1: "SUMMARY",
		2: "BRIEF",
	}
	Projection_value = map[string]int32{
		"FULL":    0,
		"SUMMARY": 1,
		"BRIEF":   2,
	}
)

func (x Projection) Enum() *Projection {
	p := new(Projection)
	*p = x
	return p
}

func (x Projection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Projection) Descriptor() protoreflect.EnumDescriptor {
	return file_dictionary_proto_enumTypes[1].Descriptor()
}

func (Projection) Type() protoreflect.EnumType {
	return &file_dictionary_proto_enumTypes[1]
}

func (x Projection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Projection.Descriptor instead.
func (Projection) EnumDescriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{1}
}

// Format defines commander print
type Format int32

const (
	// commander output yaml
	Format_YAML Format = 0
	// commander output yaml
	Format_JSON Format = 1
	// key, value pair
	Format_XML Format = 2
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "YAML",
		1: "JSON",
		2: "XML",
	}
	Format_value = map[string]int32{
		"YAML": 0,
		"JSON": 1,
		"XML":  2,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_dictionary_proto_enumTypes[2].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_dictionary_proto_enumTypes[2]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{2}
}

// Auto confirmation
type Auto int32

const (
	// no
	Auto_N Auto = 0
	// yes
	Auto_Y Auto = 1
)

// Enum value maps for Auto.
var (
	Auto_name = map[int32]string{
		0: "N",
		1: "Y",
	}
	Auto_value = map[string]int32{
		"N": 0,
		"Y": 1,
	}
)

func (x Auto) Enum() *Auto {
	p := new(Auto)
	*p = x
	return p
}

func (x Auto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Auto) Descriptor() protoreflect.EnumDescriptor {
	return file_dictionary_proto_enumTypes[3].Descriptor()
}

func (Auto) Type() protoreflect.EnumType {
	return &file_dictionary_proto_enumTypes[3]
}

func (x Auto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Auto.Descriptor instead.
func (Auto) EnumDescriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{3}
}

type FlagKey int32

const (
	// format
	FlagKey_f FlagKey = 0
	// project
	FlagKey_d FlagKey = 1
	// auto
	FlagKey_auto FlagKey = 3
)

// Enum value maps for FlagKey.
var (
	FlagKey_name = map[int32]string{
		0: "f",
		1: "d",
		3: "auto",
	}
	FlagKey_value = map[string]int32{
		"f":    0,
		"d":    1,
		"auto": 3,
	}
)

func (x FlagKey) Enum() *FlagKey {
	p := new(FlagKey)
	*p = x
	return p
}

func (x FlagKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlagKey) Descriptor() protoreflect.EnumDescriptor {
	return file_dictionary_proto_enumTypes[4].Descriptor()
}

func (FlagKey) Type() protoreflect.EnumType {
	return &file_dictionary_proto_enumTypes[4]
}

func (x FlagKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlagKey.Descriptor instead.
func (FlagKey) EnumDescriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{4}
}

// Dictionary is a dot notated key map
// notation
type Dictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections   []*Collection      `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	DictionaryMap map[string]*Schema `protobuf:"bytes,2,rep,name=dictionary_map,json=dictionaryMap,proto3" json:"dictionary_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Dictionary) Reset() {
	*x = Dictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dictionary) ProtoMessage() {}

func (x *Dictionary) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dictionary.ProtoReflect.Descriptor instead.
func (*Dictionary) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{0}
}

func (x *Dictionary) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *Dictionary) GetDictionaryMap() map[string]*Schema {
	if x != nil {
		return x.DictionaryMap
	}
	return nil
}

// Collection of stored documents
type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the collection
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type is mostly "collection"
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// readOnly indicates the update status
	ReadOnly bool `protobuf:"varint,3,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	// schema define the structure of the document
	Schema *Schema `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{1}
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Collection) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *Collection) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

// ListCollectionsRequest -
type ListCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ignore
	Ignore string `protobuf:"bytes,1,opt,name=ignore,proto3" json:"ignore,omitempty"`
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{2}
}

func (x *ListCollectionsRequest) GetIgnore() string {
	if x != nil {
		return x.Ignore
	}
	return ""
}

// ListCollectionsResponse -
type ListCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{3}
}

func (x *ListCollectionsResponse) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

// Schema defines the structure of schemas within a document
type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// schema name used for keyed lookup
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// schema title for presentation
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// type of data represented
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// description of the schema
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// uniqueItems constrains items to be unique
	UniqueItems bool `protobuf:"varint,5,opt,name=uniqueItems,proto3" json:"uniqueItems,omitempty"`
	// item list definition
	Items *Schema `protobuf:"bytes,6,opt,name=items,proto3" json:"items,omitempty"`
	// required properties and order
	Required []string `protobuf:"bytes,7,rep,name=required,proto3" json:"required,omitempty"`
	// options constrains schema to an array of choices
	Options []string `protobuf:"bytes,8,rep,name=options,proto3" json:"options,omitempty"`
	// oneOf a selection of Schemas
	OneOf []*Schema `protobuf:"bytes,9,rep,name=oneOf,proto3" json:"oneOf,omitempty"`
	// properties defines an ordered list of children
	// order determined by required array
	Properties []*Schema `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{4}
}

func (x *Schema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Schema) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Schema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Schema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Schema) GetUniqueItems() bool {
	if x != nil {
		return x.UniqueItems
	}
	return false
}

func (x *Schema) GetItems() *Schema {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Schema) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

func (x *Schema) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Schema) GetOneOf() []*Schema {
	if x != nil {
		return x.OneOf
	}
	return nil
}

func (x *Schema) GetProperties() []*Schema {
	if x != nil {
		return x.Properties
	}
	return nil
}

// ListSchemaRequest
type ListSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FlagValues
	Flags *FlagValues `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ListSchemaRequest) Reset() {
	*x = ListSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSchemaRequest) ProtoMessage() {}

func (x *ListSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSchemaRequest.ProtoReflect.Descriptor instead.
func (*ListSchemaRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{5}
}

func (x *ListSchemaRequest) GetFlags() *FlagValues {
	if x != nil {
		return x.Flags
	}
	return nil
}

// FlagValues are use by commander and storage
type FlagValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Format used by commander print
	Format Format `protobuf:"varint,1,opt,name=format,proto3,enum=centretown.sketchit.v1.Format" json:"format,omitempty"`
	// Projection used by storage & commander
	Projection []Projection `protobuf:"varint,2,rep,packed,name=projection,proto3,enum=centretown.sketchit.v1.Projection" json:"projection,omitempty"`
	// Auto used by sketchit client
	Auto Auto `protobuf:"varint,3,opt,name=auto,proto3,enum=centretown.sketchit.v1.Auto" json:"auto,omitempty"`
}

func (x *FlagValues) Reset() {
	*x = FlagValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagValues) ProtoMessage() {}

func (x *FlagValues) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagValues.ProtoReflect.Descriptor instead.
func (*FlagValues) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{6}
}

func (x *FlagValues) GetFormat() Format {
	if x != nil {
		return x.Format
	}
	return Format_YAML
}

func (x *FlagValues) GetProjection() []Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

func (x *FlagValues) GetAuto() Auto {
	if x != nil {
		return x.Auto
	}
	return Auto_N
}

// Summary of Message used in commander
type Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usage    string   `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Syntax   string   `protobuf:"bytes,2,opt,name=syntax,proto3" json:"syntax,omitempty"`
	Examples []string `protobuf:"bytes,3,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *Summary) Reset() {
	*x = Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summary) ProtoMessage() {}

func (x *Summary) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summary.ProtoReflect.Descriptor instead.
func (*Summary) Descriptor() ([]byte, []int) {
	return file_dictionary_proto_rawDescGZIP(), []int{7}
}

func (x *Summary) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *Summary) GetSyntax() string {
	if x != nil {
		return x.Syntax
	}
	return ""
}

func (x *Summary) GetExamples() []string {
	if x != nil {
		return x.Examples
	}
	return nil
}

var File_dictionary_proto protoreflect.FileDescriptor

var file_dictionary_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x92, 0x02, 0x0a, 0x0a, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74,
	0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x5c, 0x0a, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65,
	0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x1a, 0x60, 0x0a,
	0x12, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77,
	0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x88, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e,
	0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x30, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x22, 0x5f, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xec, 0x02,
	0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f,
	0x77, 0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x12, 0x3e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b,
	0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b,
	0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x0a,
	0x46, 0x6c, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x65, 0x6e,
	0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74,
	0x6f, 0x77, 0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77,
	0x6e, 0x2e, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e,
	0x74, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x74, 0x61,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2a, 0x57, 0x0a,
	0x04, 0x56, 0x65, 0x72, 0x62, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x67, 0x6f, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x10, 0x05, 0x12,
	0x0a, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x04, 0x65,
	0x78, 0x69, 0x74, 0x10, 0xe7, 0x07, 0x2a, 0x2e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x52, 0x49, 0x45, 0x46, 0x10, 0x02, 0x2a, 0x25, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x4d, 0x4c, 0x10, 0x02, 0x2a, 0x14, 0x0a,
	0x04, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x05, 0x0a, 0x01, 0x4e, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01,
	0x59, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x07, 0x46, 0x6c, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x05,
	0x0a, 0x01, 0x66, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x64, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x6f, 0x10, 0x03, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x2f,
	0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dictionary_proto_rawDescOnce sync.Once
	file_dictionary_proto_rawDescData = file_dictionary_proto_rawDesc
)

func file_dictionary_proto_rawDescGZIP() []byte {
	file_dictionary_proto_rawDescOnce.Do(func() {
		file_dictionary_proto_rawDescData = protoimpl.X.CompressGZIP(file_dictionary_proto_rawDescData)
	})
	return file_dictionary_proto_rawDescData
}

var file_dictionary_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_dictionary_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dictionary_proto_goTypes = []interface{}{
	(Verb)(0),                       // 0: centretown.sketchit.v1.Verb
	(Projection)(0),                 // 1: centretown.sketchit.v1.Projection
	(Format)(0),                     // 2: centretown.sketchit.v1.Format
	(Auto)(0),                       // 3: centretown.sketchit.v1.Auto
	(FlagKey)(0),                    // 4: centretown.sketchit.v1.FlagKey
	(*Dictionary)(nil),              // 5: centretown.sketchit.v1.Dictionary
	(*Collection)(nil),              // 6: centretown.sketchit.v1.Collection
	(*ListCollectionsRequest)(nil),  // 7: centretown.sketchit.v1.ListCollectionsRequest
	(*ListCollectionsResponse)(nil), // 8: centretown.sketchit.v1.ListCollectionsResponse
	(*Schema)(nil),                  // 9: centretown.sketchit.v1.Schema
	(*ListSchemaRequest)(nil),       // 10: centretown.sketchit.v1.ListSchemaRequest
	(*FlagValues)(nil),              // 11: centretown.sketchit.v1.FlagValues
	(*Summary)(nil),                 // 12: centretown.sketchit.v1.Summary
	nil,                             // 13: centretown.sketchit.v1.Dictionary.DictionaryMapEntry
}
var file_dictionary_proto_depIdxs = []int32{
	6,  // 0: centretown.sketchit.v1.Dictionary.collections:type_name -> centretown.sketchit.v1.Collection
	13, // 1: centretown.sketchit.v1.Dictionary.dictionary_map:type_name -> centretown.sketchit.v1.Dictionary.DictionaryMapEntry
	9,  // 2: centretown.sketchit.v1.Collection.schema:type_name -> centretown.sketchit.v1.Schema
	6,  // 3: centretown.sketchit.v1.ListCollectionsResponse.collections:type_name -> centretown.sketchit.v1.Collection
	9,  // 4: centretown.sketchit.v1.Schema.items:type_name -> centretown.sketchit.v1.Schema
	9,  // 5: centretown.sketchit.v1.Schema.oneOf:type_name -> centretown.sketchit.v1.Schema
	9,  // 6: centretown.sketchit.v1.Schema.properties:type_name -> centretown.sketchit.v1.Schema
	11, // 7: centretown.sketchit.v1.ListSchemaRequest.flags:type_name -> centretown.sketchit.v1.FlagValues
	2,  // 8: centretown.sketchit.v1.FlagValues.format:type_name -> centretown.sketchit.v1.Format
	1,  // 9: centretown.sketchit.v1.FlagValues.projection:type_name -> centretown.sketchit.v1.Projection
	3,  // 10: centretown.sketchit.v1.FlagValues.auto:type_name -> centretown.sketchit.v1.Auto
	9,  // 11: centretown.sketchit.v1.Dictionary.DictionaryMapEntry.value:type_name -> centretown.sketchit.v1.Schema
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_dictionary_proto_init() }
func file_dictionary_proto_init() {
	if File_dictionary_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dictionary_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dictionary_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dictionary_proto_goTypes,
		DependencyIndexes: file_dictionary_proto_depIdxs,
		EnumInfos:         file_dictionary_proto_enumTypes,
		MessageInfos:      file_dictionary_proto_msgTypes,
	}.Build()
	File_dictionary_proto = out.File
	file_dictionary_proto_rawDesc = nil
	file_dictionary_proto_goTypes = nil
	file_dictionary_proto_depIdxs = nil
}
